plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("kotlin-android-extensions")
    id("ktlint")
}

repositories {
    mavenCentral()
}

if (new File('app/src/topplayers/build.gradle').exists()
        && new File('app/src/coldrealityy/build.gradle').exists()) {
    apply from: 'src/topplayers/build.gradle'
    apply from: 'src/coldrealityy/build.gradle'
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "es.voghdev.playbattlegrounds"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "isPaid"

    productFlavors {
        prod {
            applicationId "es.voghdev.playbattlegrounds"
            versionName "1.0.0"
            versionCode 1

            Properties prop = new Properties();
            prop.load(project.rootProject.file('pubg-api.properties').newDataInputStream())
            def apiKey = prop.get("apiKey", null)
            if (apiKey == null)
                throw new GradleException("Can't find apiKey in pubg-api.properties. Please set it to your PUBG Api key");

            buildConfigField("String", "PUBGApiKey", "\"${apiKey}\"")
            buildConfigField("long", "Limit", "0L")

            dimension "isPaid"
        }
    }
}

task runUnitTests(dependsOn: [':app:testDebugUnitTest']) {
    description 'Run all unit tests'
}

task runAcceptanceTests(dependsOn: [':app:connectedAndroidTest']) {
    description 'Run all acceptance tests.'
}

task createTestResources {
    description = ""
    doLast {
        def mockMakerFile = new File("$projectDir/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker")
        if (System.env.MOCK_MAKER != null) {
            logger.info("Using MockMaker ${System.env.MOCK_MAKER}")
            mockMakerFile.parentFile.mkdirs()
            mockMakerFile.createNewFile()
            mockMakerFile.write(System.env.MOCK_MAKER)
        } else {
            logger.info("Using default MockMaker")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.activity:activity-ktx:1.1.0"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.7.5'
    testImplementation "com.nhaarman:mockito-kotlin:1.4.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

    implementation 'io.arrow-kt:arrow-core-data:0.10.5'

    implementation 'org.kodein.di:kodein-di-generic-jvm:5.0.0'

    implementation 'com.github.pedrovgs:renderers:3.4.0'
    implementation 'com.github.arcadefire:nice-spinner:1.3.1'
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:$dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow:$dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:$dbflow_version"

    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:$dbflow_version"
}
